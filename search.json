[
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nfoo\n\n foo ()",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CIGNN-experimental",
    "section": "",
    "text": "This file will become your README and also the index of your documentation.",
    "crumbs": [
      "CIGNN-experimental"
    ]
  },
  {
    "objectID": "index.html#developer-guide",
    "href": "index.html#developer-guide",
    "title": "CIGNN-experimental",
    "section": "Developer Guide",
    "text": "Developer Guide\nIf you are new to using nbdev here are some useful pointers to get you started.\n\nInstall CIGNN_experimental in Development mode\n# make sure CIGNN_experimental package is installed in development mode\n$ pip install -e .\n\n# make changes under nbs/ directory\n# ...\n\n# compile to have changes apply to CIGNN_experimental\n$ nbdev_prepare",
    "crumbs": [
      "CIGNN-experimental"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "CIGNN-experimental",
    "section": "Usage",
    "text": "Usage\n\nInstallation\nInstall latest from the GitHub repository:\n$ pip install git+https://github.com/TimHal/CIGNN-experimental.git\nor from conda\n$ conda install -c TimHal CIGNN_experimental\nor from pypi\n$ pip install CIGNN_experimental\n\n\nDocumentation\nDocumentation can be found hosted on this GitHub repository’s pages. Additionally you can find package manager specific guidelines on conda and pypi respectively.",
    "crumbs": [
      "CIGNN-experimental"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "CIGNN-experimental",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2",
    "crumbs": [
      "CIGNN-experimental"
    ]
  },
  {
    "objectID": "datasets.html",
    "href": "datasets.html",
    "title": "datasets",
    "section": "",
    "text": "say_hello\n\n say_hello (to)\n\nSay hello to somebody\n\nassert say_hello(\"Hamel\") == \"Hello Hamel!\"",
    "crumbs": [
      "datasets"
    ]
  }
]